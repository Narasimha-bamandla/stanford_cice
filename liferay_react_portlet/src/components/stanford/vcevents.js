import React from 'react';  
const SvgList = ({ icon, color }) => {
  const svgData = [
    ' <path fill-rule="evenodd" clip-rule="evenodd" d="M6 0.837209C3.14867 0.837209 0.837209 3.14867 0.837209 6C0.837209 8.85133 3.14867 11.1628 6 11.1628C8.85133 11.1628 11.1628 8.85133 11.1628 6C11.1628 3.14867 8.85133 0.837209 6 0.837209ZM0 6C0 2.68629 2.68629 0 6 0C9.31371 0 12 2.68629 12 6C12 9.31371 9.31371 12 6 12C2.68629 12 0 9.31371 0 6Z" fill="currentColor"/>    <path fill-rule="evenodd" clip-rule="evenodd" d="M2.3182 6.1318C2.49393 5.95607 2.77886 5.95607 2.95459 6.1318L4.75772 7.93492L8.68216 4.01048C8.8579 3.83474 9.14282 3.83474 9.31856 4.01048C9.49429 4.18622 9.49429 4.47114 9.31856 4.64688L5.07591 8.88952C4.90018 9.06525 4.61525 9.06525 4.43952 8.88952L2.3182 6.7682C2.14246 6.59246 2.14246 6.30754 2.3182 6.1318Z" fill="currentColor"/>        ',
    '<path d="M6.00282 7.47748C6.09868 7.47748 6.19061 7.43858 6.25839 7.36934C6.32616 7.30009 6.36424 7.20618 6.36424 7.10825V4.52363C6.36424 4.4257 6.32616 4.33178 6.25839 4.26254C6.19061 4.1933 6.09868 4.15439 6.00282 4.15439C5.90697 4.15439 5.81504 4.1933 5.74726 4.26254C5.67948 4.33178 5.64141 4.4257 5.64141 4.52363V7.10825C5.64141 7.20618 5.67948 7.30009 5.74726 7.36934C5.81504 7.43858 5.90697 7.47748 6.00282 7.47748Z" fill="currentColor"/>    <path d="M6.00282 8.95634C6.20243 8.95634 6.36424 8.79102 6.36424 8.5871C6.36424 8.38318 6.20243 8.21787 6.00282 8.21787C5.80322 8.21787 5.64141 8.38318 5.64141 8.5871C5.64141 8.79102 5.80322 8.95634 6.00282 8.95634Z" fill="currentColor"/>    <path fill-rule="evenodd" clip-rule="evenodd" d="M10.8582 10.649C10.6916 10.748 10.5023 10.8001 10.3095 10.8H1.69045C1.4977 10.8001 1.30837 10.748 1.14176 10.649C0.97515 10.55 0.83723 10.4076 0.742068 10.2363C0.646905 10.0651 0.597906 9.87113 0.600069 9.67423C0.602231 9.47733 0.655477 9.28453 0.754377 9.11551L5.06429 1.74269C5.16094 1.57723 5.29798 1.44023 5.462 1.3451C5.62601 1.24996 5.81139 1.19995 6 1.19995C6.18861 1.19995 6.37398 1.24996 6.538 1.3451C6.70202 1.44023 6.83906 1.57723 6.93571 1.74269L11.2456 9.11551C11.3445 9.28453 11.3978 9.47733 11.3999 9.67423C11.4021 9.87113 11.3531 10.0651 11.2579 10.2363C11.1628 10.4076 11.0248 10.55 10.8582 10.649ZM5.68448 2.123L1.37385 9.49398C1.34155 9.55119 1.32447 9.61604 1.32431 9.68209C1.32414 9.74813 1.3409 9.81307 1.37291 9.87045C1.40492 9.92783 1.45107 9.97565 1.50678 10.0092C1.56249 10.0427 1.62581 10.0607 1.69045 10.0615H10.3095C10.3742 10.0607 10.4375 10.0427 10.4932 10.0092C10.5489 9.97565 10.5951 9.92783 10.6271 9.87045C10.6591 9.81307 10.6759 9.74813 10.6757 9.68209C10.6755 9.61604 10.6584 9.55119 10.6262 9.49398L6.31552 2.123C6.28217 2.0682 6.23569 2.02299 6.18048 1.99165C6.12528 1.9603 6.06316 1.94385 6 1.94385C5.93684 1.94385 5.87472 1.9603 5.81951 1.99165C5.76431 2.02299 5.71783 2.0682 5.68448 2.123Z" fill="currentColor"/>    ',
    '<g clip-path="url(#clip0_7983_126769)"> <path d="M10.5672 2.04866C10.3033 1.7796 9.99 1.56615 9.64515 1.42053C9.30029 1.2749 8.93066 1.19995 8.55737 1.19995C8.18409 1.19995 7.81446 1.2749 7.4696 1.42053C7.12475 1.56615 6.81142 1.7796 6.54753 2.04866L5.99986 2.60681L5.45219 2.04866C4.91915 1.50542 4.19618 1.20023 3.44235 1.20023C2.68851 1.20023 1.96555 1.50542 1.4325 2.04866C0.899459 2.5919 0.599998 3.32869 0.599998 4.09695C0.599998 4.8652 0.899459 5.60199 1.4325 6.14523L1.98017 6.70338L5.99986 10.8L10.0195 6.70338L10.5672 6.14523C10.8312 5.87629 11.0407 5.55698 11.1836 5.20553C11.3265 4.85407 11.4 4.47737 11.4 4.09695C11.4 3.71652 11.3265 3.33982 11.1836 2.98837C11.0407 2.63692 10.8312 2.3176 10.5672 2.04866Z" stroke="#2E2D29" stroke-linecap="round" stroke-linejoin="round"/>    </g>    <defs>    <clipPath id="clip0_7983_126769">    <rect width="12" height="12" fill="currentColor"/>    </clipPath>    </defs>',
    '<path fill-rule="evenodd" clip-rule="evenodd" d="M3.42 0C3.7348 0 3.99 0.244208 3.99 0.545455V1.09091H7.41V0.545455C7.41 0.244208 7.6652 0 7.98 0C8.2948 0 8.55 0.244208 8.55 0.545455V1.09091H9.69C10.6344 1.09091 11.4 1.82353 11.4 2.72727V10.3636C11.4 11.2674 10.6344 12 9.69 12H1.71C0.765593 12 0 11.2674 0 10.3636V2.72727C0 1.82353 0.765593 1.09091 1.71 1.09091H2.85V0.545455C2.85 0.244208 3.1052 0 3.42 0ZM2.85 2.18182H1.71C1.3952 2.18182 1.14 2.42603 1.14 2.72727V4.36364H10.26V2.72727C10.26 2.42603 10.0048 2.18182 9.69 2.18182H8.55V2.72727C8.55 3.02852 8.2948 3.27273 7.98 3.27273C7.6652 3.27273 7.41 3.02852 7.41 2.72727V2.18182H3.99V2.72727C3.99 3.02852 3.7348 3.27273 3.42 3.27273C3.1052 3.27273 2.85 3.02852 2.85 2.72727V2.18182ZM10.26 5.45455H1.14V10.3636C1.14 10.6649 1.3952 10.9091 1.71 10.9091H9.69C10.0048 10.9091 10.26 10.6649 10.26 10.3636V5.45455Z" fill="currentColor"/>    ',

   ];

  return (
    <div className='icon' dangerouslySetInnerHTML={{ __html: `<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 12 12" fill="none">
        ${svgData[icon]}</svg>` }}   />
  );
};
 
const eventData = [
  { type: 'POLECON 212.05', icon: 0, classname: 'enrolled' },  
  { type: 'POLECON 212.05', icon: 1, classname: 'conflict' },   
  { type: 'POLECON 212.05', icon: 2, classname: 'planned' },  
  { type: 'POLECON 212.05', icon: 3, classname: 'preferences' },  
  { type: 'POLECON 212.05', icon: 1, classname: 'coreArea1' },  
  { type: 'POLECON 212.05', icon: 1, classname: 'coreArea2' },  
  { type: 'POLECON 212.05', icon: 1, classname: 'coreArea3' },  
  { type: 'POLECON 212.05', icon: 1, classname: 'coreArea4' },  
  { type: 'POLECON 212.05', icon: 1, classname: 'coreArea5' },  
  { type: 'POLECON 212.05', icon: 1, classname: 'coreArea6' },  
  { type: 'POLECON 212.05', icon: 1, classname: 'coreArea7' },  
  { type: 'POLECON 212.05', icon: 1, classname: 'coreArea8' },  
  { type: 'POLECON 212.05', icon: 1, classname: 'coreArea9' },  
  { type: 'POLECON 212.05', icon: 1, classname: 'coreArea10' },  
  { type: 'POLECON 212.05', icon: 1, classname: 'coreArea11' },  
  { type: 'POLECON 212.05', icon: 1, classname: 'coreArea12' },    
  { type: 'POLECON 212.05', icon: 1, classname: 'coreArea13' },  
  { type: 'POLECON 212.05', icon: 1, classname: 'coreArea14' }, 
];

const EventComponent = ({ type, icon, classname }) => (
  <div className={'sdfd-vcevent ' + classname} >
    <span className='text'> {type} </span>
    <SvgList icon={icon}   />
  </div>
);
 

 

const EventsList = () => {
 

  return (
    <div style={{display:'flex', flexWrap:'wrap', gap:20}}>
{eventData.map((event, index) => (
      <EventComponent key={index} type={event.type} icon={event.icon} classname={event.classname} />
    ))}
    </div>
  );
};
 

 
export default EventsList;
 